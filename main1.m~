%PARTE 1 PROGETTO MTFIA

clc;
clear;


% DESCRIZIONE
% X indica la quantità di prodotto nell'inventario di ogni centro di
% produzione (3 componenti).
% U indica le quantità di prodotto in uscita o le quantità di materiale 
% grezzo in ingresso (5 componenti).

% Si richiede, inoltre: 
% U(3,:) ~ 4 * U(1,:)
% U(4,:) ~ 2 * U(5,:)
% X(2,:) ~ X(1,:)

% Si assume che lo stato sia perfettamente osservabile. Si vuole definire
% il controllo ottimo in modo da minimizzare l'errore quadratico dello
% stato e del controllo rispetto a zero, con time horizon di 7 giorni.


% DEFINIZIONE PARAMETRI
% Assumiamo tempo di campionamento di un giorno e time horizon di 7 giorni.
% Note:
% - l'istante 0 corrisponde all'indice 1;
% - l'istante finale corrisponde all'indice T.
sample_time = 1;
horizon = 7;
interval = 1:sample_time:horizon;
T = length(interval);                                                      

% Definizione delle matrici A, B, C, D:
A = eye(3); 
B = [2 0 -1 0 0; 0 1 0 -2 0; 0 0 1 3 -1];
C = eye(3);
D = zeros(3,5);

% Definizione dello stato iniziale:
X0 = [100, 70, -45]';


% SIMULAZIONE RISPOSTA LIBERA
% Ingresso nullo:
U = zeros(size(B,2), T);
% Modello del sistema a tempo continuo:
sys = ss(A, B, C, D);
% Simulazione del sistema a tempo discreto:
Y = lsim(sys, U', interval, X0);   
% Plot della risposta libera:
subplot(3, 1, 1);
plot(interval, Y)
axis('tight');
title('Risposta libera')


% DEFINIZIONE MATRICI Q E R
%Definizione parametri per le matrici dei costi:
q = 1;      % Definisce il peso (costo) dello stato.
r = 1;      % Definisce il peso (costo) del controllo.
gamma = 3;  % Peso per portare a zero lo stato.
eta = 2.26; % Peso per portare a zero il controllo.

Q = q * ([1 -1 0; -1 1 0; 0 0 0] + gamma * eye(3));
Q(2,1) = -1;
Q(1,2) = -1;
Q(3,3) = 0;
Q = q*(Q + gamma*eye(3));
Qf = Q;

R = [16 0 -4 0 0; 0 0 0 0 0; -4 0 1 0 0; 0 0 0 1 -2; 0 0 0 -2 4];
R = r*(R + eta*eye(5));

%Ottengo il valore di Kp:
[K ,P] = lqrfinite(A, B, Q, Qf, R, T);

%Simulo il sistema con il controllo ottimo:
X = zeros(size(X0,1), T+1);
U = zeros(size(B,2), T);
Y = zeros(size(C,1), T);
X(:,1) = X0;
U(:,1) = K(:,:,1)*X0;
for k = 1:T
    U(:,k) = K(:,:,k)*X(:,k);
    X(:,k+1) = A*X(:,k) + B*U(:,k);
    Y(:,k) = C*X(:,k);
end

%Plot della simulazione:
subplot (3,1,2);
plot(interval,Y);
title('CONTROLLO STATO LQR');
legend('x1','x2','x3');

%Plot del controllo:
subplot (3,1,3);
plot(interval,U);
title('CONTROLLI LQR');
legend('u1','u2','u3', 'u4', 'u5');
